// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login_event.proto

/*
Package login_event is a generated protocol buffer package.

It is generated from these files:
	login_event.proto

It has these top-level messages:
	PLoginByPassport
	PLoginByPassportRes
	PLoginByToken
	PLoginByTokenRes
	PLoginLogout
	PLoginLogoutRes
	PLoginPing
	PLoginPingRes
	PLoginKickOff
*/
package login_event

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 用户名密码登录
type PLoginByPassport struct {
	Uri        int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Passport   string `protobuf:"bytes,21,opt,name=passport" json:"passport,omitempty"`
	Password   string `protobuf:"bytes,22,opt,name=password" json:"password,omitempty"`
	Deviceid   string `protobuf:"bytes,23,opt,name=deviceid" json:"deviceid,omitempty"`
	Devicetype string `protobuf:"bytes,24,opt,name=devicetype" json:"devicetype,omitempty"`
	// liujia: params作为万能容器，添加version--客户端版本号，devicetype--客户端硬件类型，ostype-客户端os类型, sdkversion等
	Params map[string]string `protobuf:"bytes,25,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PLoginByPassport) Reset()                    { *m = PLoginByPassport{} }
func (m *PLoginByPassport) String() string            { return proto.CompactTextString(m) }
func (*PLoginByPassport) ProtoMessage()               {}
func (*PLoginByPassport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PLoginByPassport) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginByPassport) GetPassport() string {
	if m != nil {
		return m.Passport
	}
	return ""
}

func (m *PLoginByPassport) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PLoginByPassport) GetDeviceid() string {
	if m != nil {
		return m.Deviceid
	}
	return ""
}

func (m *PLoginByPassport) GetDevicetype() string {
	if m != nil {
		return m.Devicetype
	}
	return ""
}

func (m *PLoginByPassport) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// 用户名密码登录回应，登录成功rescode为0，uid、token返回，否则uid、token为空
type PLoginByPassportRes struct {
	Uri     int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Rescode int32  `protobuf:"varint,21,opt,name=rescode" json:"rescode,omitempty"`
	Uid     string `protobuf:"bytes,22,opt,name=uid" json:"uid,omitempty"`
	Token   string `protobuf:"bytes,23,opt,name=token" json:"token,omitempty"`
}

func (m *PLoginByPassportRes) Reset()                    { *m = PLoginByPassportRes{} }
func (m *PLoginByPassportRes) String() string            { return proto.CompactTextString(m) }
func (*PLoginByPassportRes) ProtoMessage()               {}
func (*PLoginByPassportRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PLoginByPassportRes) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginByPassportRes) GetRescode() int32 {
	if m != nil {
		return m.Rescode
	}
	return 0
}

func (m *PLoginByPassportRes) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginByPassportRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// token登录
type PLoginByToken struct {
	Uri        int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Uid        string `protobuf:"bytes,21,opt,name=uid" json:"uid,omitempty"`
	Token      string `protobuf:"bytes,22,opt,name=token" json:"token,omitempty"`
	Deviceid   string `protobuf:"bytes,23,opt,name=deviceid" json:"deviceid,omitempty"`
	Devicetype string `protobuf:"bytes,24,opt,name=devicetype" json:"devicetype,omitempty"`
	// liujia: params作为万能容器，添加version--客户端版本号，devicetype--客户端硬件类型，ostype-客户端os类型, sdkversion等
	Params map[string]string `protobuf:"bytes,25,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PLoginByToken) Reset()                    { *m = PLoginByToken{} }
func (m *PLoginByToken) String() string            { return proto.CompactTextString(m) }
func (*PLoginByToken) ProtoMessage()               {}
func (*PLoginByToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PLoginByToken) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginByToken) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginByToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PLoginByToken) GetDeviceid() string {
	if m != nil {
		return m.Deviceid
	}
	return ""
}

func (m *PLoginByToken) GetDevicetype() string {
	if m != nil {
		return m.Devicetype
	}
	return ""
}

func (m *PLoginByToken) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// token登录回应
type PLoginByTokenRes struct {
	Uri     int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Rescode int32  `protobuf:"varint,21,opt,name=rescode" json:"rescode,omitempty"`
	Uid     string `protobuf:"bytes,22,opt,name=uid" json:"uid,omitempty"`
	Token   string `protobuf:"bytes,23,opt,name=token" json:"token,omitempty"`
}

func (m *PLoginByTokenRes) Reset()                    { *m = PLoginByTokenRes{} }
func (m *PLoginByTokenRes) String() string            { return proto.CompactTextString(m) }
func (*PLoginByTokenRes) ProtoMessage()               {}
func (*PLoginByTokenRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PLoginByTokenRes) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginByTokenRes) GetRescode() int32 {
	if m != nil {
		return m.Rescode
	}
	return 0
}

func (m *PLoginByTokenRes) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginByTokenRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 退出登录
type PLoginLogout struct {
	Uri        int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Uid        string `protobuf:"bytes,21,opt,name=uid" json:"uid,omitempty"`
	Token      string `protobuf:"bytes,22,opt,name=token" json:"token,omitempty"`
	Deviceid   string `protobuf:"bytes,23,opt,name=deviceid" json:"deviceid,omitempty"`
	Devicetype string `protobuf:"bytes,24,opt,name=devicetype" json:"devicetype,omitempty"`
}

func (m *PLoginLogout) Reset()                    { *m = PLoginLogout{} }
func (m *PLoginLogout) String() string            { return proto.CompactTextString(m) }
func (*PLoginLogout) ProtoMessage()               {}
func (*PLoginLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PLoginLogout) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginLogout) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginLogout) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PLoginLogout) GetDeviceid() string {
	if m != nil {
		return m.Deviceid
	}
	return ""
}

func (m *PLoginLogout) GetDevicetype() string {
	if m != nil {
		return m.Devicetype
	}
	return ""
}

// 退出登录回应
type PLoginLogoutRes struct {
	Uri     int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Rescode int32  `protobuf:"varint,21,opt,name=rescode" json:"rescode,omitempty"`
	Uid     string `protobuf:"bytes,22,opt,name=uid" json:"uid,omitempty"`
}

func (m *PLoginLogoutRes) Reset()                    { *m = PLoginLogoutRes{} }
func (m *PLoginLogoutRes) String() string            { return proto.CompactTextString(m) }
func (*PLoginLogoutRes) ProtoMessage()               {}
func (*PLoginLogoutRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PLoginLogoutRes) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginLogoutRes) GetRescode() int32 {
	if m != nil {
		return m.Rescode
	}
	return 0
}

func (m *PLoginLogoutRes) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

// 客户端发送的心跳
type PLoginPing struct {
	Uri      int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Uid      string `protobuf:"bytes,21,opt,name=uid" json:"uid,omitempty"`
	Clientts int64  `protobuf:"zigzag64,22,opt,name=clientts" json:"clientts,omitempty"`
}

func (m *PLoginPing) Reset()                    { *m = PLoginPing{} }
func (m *PLoginPing) String() string            { return proto.CompactTextString(m) }
func (*PLoginPing) ProtoMessage()               {}
func (*PLoginPing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PLoginPing) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginPing) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginPing) GetClientts() int64 {
	if m != nil {
		return m.Clientts
	}
	return 0
}

// 客户端心跳包回应，clientts为收到的客户端心跳包的clientts字段，同时返回server的时间戳，可进行时间同步
type PLoginPingRes struct {
	Uri      int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Uid      string `protobuf:"bytes,21,opt,name=uid" json:"uid,omitempty"`
	Clientts int64  `protobuf:"zigzag64,22,opt,name=clientts" json:"clientts,omitempty"`
	Serverts int64  `protobuf:"zigzag64,23,opt,name=serverts" json:"serverts,omitempty"`
}

func (m *PLoginPingRes) Reset()                    { *m = PLoginPingRes{} }
func (m *PLoginPingRes) String() string            { return proto.CompactTextString(m) }
func (*PLoginPingRes) ProtoMessage()               {}
func (*PLoginPingRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PLoginPingRes) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginPingRes) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginPingRes) GetClientts() int64 {
	if m != nil {
		return m.Clientts
	}
	return 0
}

func (m *PLoginPingRes) GetServerts() int64 {
	if m != nil {
		return m.Serverts
	}
	return 0
}

// 发给客户端的被踢了的包
type PLoginKickOff struct {
	Uri    int32  `protobuf:"varint,1,opt,name=uri" json:"uri,omitempty"`
	Uid    string `protobuf:"bytes,21,opt,name=uid" json:"uid,omitempty"`
	Reason string `protobuf:"bytes,22,opt,name=reason" json:"reason,omitempty"`
}

func (m *PLoginKickOff) Reset()                    { *m = PLoginKickOff{} }
func (m *PLoginKickOff) String() string            { return proto.CompactTextString(m) }
func (*PLoginKickOff) ProtoMessage()               {}
func (*PLoginKickOff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PLoginKickOff) GetUri() int32 {
	if m != nil {
		return m.Uri
	}
	return 0
}

func (m *PLoginKickOff) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PLoginKickOff) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*PLoginByPassport)(nil), "login_event.PLoginByPassport")
	proto.RegisterType((*PLoginByPassportRes)(nil), "login_event.PLoginByPassportRes")
	proto.RegisterType((*PLoginByToken)(nil), "login_event.PLoginByToken")
	proto.RegisterType((*PLoginByTokenRes)(nil), "login_event.PLoginByTokenRes")
	proto.RegisterType((*PLoginLogout)(nil), "login_event.PLoginLogout")
	proto.RegisterType((*PLoginLogoutRes)(nil), "login_event.PLoginLogoutRes")
	proto.RegisterType((*PLoginPing)(nil), "login_event.PLoginPing")
	proto.RegisterType((*PLoginPingRes)(nil), "login_event.PLoginPingRes")
	proto.RegisterType((*PLoginKickOff)(nil), "login_event.PLoginKickOff")
}

func init() { proto.RegisterFile("login_event.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x31, 0x4f, 0xe3, 0x30,
	0x14, 0x56, 0x52, 0xb5, 0xd7, 0xbe, 0xde, 0xe9, 0x7a, 0xbe, 0x6b, 0xcf, 0x74, 0x40, 0x55, 0x06,
	0x54, 0x96, 0x0e, 0xb0, 0x00, 0x03, 0x12, 0x48, 0x4c, 0xad, 0xd4, 0xc8, 0x62, 0x47, 0x21, 0x71,
	0x2b, 0x2b, 0x25, 0x8e, 0x6c, 0x37, 0x28, 0x1b, 0x03, 0xbf, 0x81, 0xdf, 0x8b, 0xec, 0xc4, 0x6d,
	0x54, 0x65, 0x28, 0x2a, 0x88, 0xed, 0x7d, 0xef, 0x73, 0xbe, 0xef, 0xbd, 0x2f, 0x96, 0xe1, 0xcf,
	0x8a, 0x2f, 0x59, 0xf2, 0x40, 0x33, 0x9a, 0xa8, 0x49, 0x2a, 0xb8, 0xe2, 0xa8, 0x5b, 0x69, 0x79,
	0x6f, 0x2e, 0xf4, 0xfc, 0x99, 0x6e, 0xdc, 0xe6, 0x7e, 0x20, 0x65, 0xca, 0x85, 0x42, 0x3d, 0x68,
	0xac, 0x05, 0xc3, 0xce, 0xc8, 0x19, 0x37, 0x89, 0x2e, 0xd1, 0x10, 0xda, 0x69, 0xc9, 0xe2, 0xfe,
	0xc8, 0x19, 0x77, 0xc8, 0x06, 0x5b, 0xee, 0x99, 0x8b, 0x08, 0x0f, 0xb6, 0x9c, 0xc6, 0x9a, 0x8b,
	0x68, 0xc6, 0x42, 0xca, 0x22, 0xfc, 0xbf, 0xe0, 0x2c, 0x46, 0xc7, 0x00, 0x45, 0xad, 0xf2, 0x94,
	0x62, 0x6c, 0xd8, 0x4a, 0x07, 0xdd, 0x40, 0x2b, 0x0d, 0x44, 0xf0, 0x24, 0xf1, 0xd1, 0xa8, 0x31,
	0xee, 0x9e, 0x9d, 0x4e, 0xaa, 0xbb, 0xec, 0x0e, 0x3d, 0xf1, 0xcd, 0xd9, 0xbb, 0x44, 0x89, 0x9c,
	0x94, 0x1f, 0x0e, 0x2f, 0xa1, 0x5b, 0x69, 0xeb, 0xbd, 0x62, 0x9a, 0x9b, 0xbd, 0x3a, 0x44, 0x97,
	0xe8, 0x1f, 0x34, 0xb3, 0x60, 0xb5, 0xa6, 0xd8, 0x35, 0xbd, 0x02, 0x5c, 0xb9, 0x17, 0x8e, 0xc7,
	0xe0, 0xef, 0xae, 0x05, 0xa1, 0xb2, 0x26, 0x1a, 0x0c, 0x3f, 0x04, 0x95, 0x21, 0x8f, 0xa8, 0x49,
	0xa6, 0x49, 0x2c, 0x34, 0x67, 0x99, 0xcd, 0x44, 0x97, 0xda, 0x4e, 0xf1, 0x98, 0x26, 0x65, 0x16,
	0x05, 0xf0, 0x5e, 0x5c, 0xf8, 0x65, 0xbd, 0xee, 0x75, 0xa7, 0xc6, 0xa5, 0xd4, 0xea, 0xd7, 0x68,
	0x0d, 0x2a, 0x5a, 0x07, 0x05, 0x7e, 0xbd, 0x13, 0xf8, 0x49, 0x6d, 0xe0, 0x66, 0xc2, 0xcf, 0x4e,
	0x7b, 0xb1, 0xbd, 0x85, 0x46, 0xff, 0xab, 0xa2, 0x7e, 0x75, 0xe0, 0x67, 0x61, 0x34, 0xe3, 0x4b,
	0xbe, 0x56, 0xdf, 0x93, 0xb4, 0x37, 0x87, 0xdf, 0xd5, 0x29, 0x0e, 0xde, 0xd6, 0x9b, 0x01, 0x14,
	0x82, 0x3e, 0x4b, 0x96, 0x7b, 0x2d, 0x35, 0x84, 0x76, 0xb8, 0x62, 0x34, 0x51, 0x4a, 0x1a, 0x21,
	0x44, 0x36, 0xd8, 0x8b, 0xed, 0x7d, 0xd4, 0x6a, 0xf5, 0xc3, 0x7d, 0x48, 0x50, 0x73, 0x92, 0x8a,
	0x8c, 0x0a, 0x25, 0x4d, 0x56, 0x88, 0x6c, 0xb0, 0x37, 0xb5, 0x66, 0x53, 0x16, 0xc6, 0xf3, 0xc5,
	0x62, 0x2f, 0xb3, 0x01, 0xb4, 0x04, 0x0d, 0x24, 0xb7, 0xff, 0xa4, 0x44, 0x8f, 0x2d, 0xf3, 0xc4,
	0x9d, 0xbf, 0x07, 0x00, 0x00, 0xff, 0xff, 0x15, 0x54, 0xb8, 0x98, 0xf7, 0x04, 0x00, 0x00,
}
